pkg_fetch() {
    import/git $pkg_name $pkg_url $* || return $import_error
    pkg_vsn=${$(_pkg_cd_sources && pkg_revision)#v}
}
pkg_init() { : }
pkg_config() {
    local -a conf
    conf=("--prefix=$PWD/$(_pkg_dist)" $(echo $pkg_cfg))
    [ -x autogen.sh ] && {
        # new rebar version
        ./autogen.sh
        ./configure $conf
    } || {
        # old configure version
        (cd src
         [ -x configure ] || autoreconf -vif
         ./configure $conf)
    }
}
pkg_make() {
    local cf="" lf=""
    [ -x /opt/local/bin/port ] && { cf="-I/opt/local/include"; lf="-L/opt/local/lib" }
    [ -x /usr/local/bin/brew ] && {
        local lib p
        for lib in openssl expat
        do
            p=$(brew info $lib | sed -e '/^\//!d;s/ .*//' | tail -n 1)
            cf+=" -I$p/include"
            lf+=" -L$p/lib"
        done
    }
    [ -x autogen.sh ] && {
        # rebar version
        CFLAGS="$cf" LDFLAGS="$lf" $MAKE all || return $make_error
    } || {
        # old configure version
        (cd src; CFLAGS="$cf" LDFLAGS="$lf" $MAKE) || return $make_error
    }
}
pkg_install() {
    local dist=$(_pkg_dist)
    [ -x autogen.sh ] && {
        # rebar version
        $MAKE install || return $install_error
        # TODO use $MAKE rel
    } || {
        # old configure version
        (cd src; $MAKE install) || return $install_error
        (cd src; $MAKE distclean)
    }
    (cd $dist
     mv ../src .
     mv lib/ejabberd/* . || mv var/lib/ejabberd/* .
     mv sbin/* priv/bin
     mkdir -p priv/cfg priv/sql doc
     mv etc/ejabberd/* priv/cfg
     [ -d src/odbc ] && mv src/odbc/*sql priv/sql
     [ -d ../sql ] && mv ../sql/* priv/sql
     [ -d ../tools ] && mv ../tools priv
     [ -f ../doc/README.txt ] && mv ../doc/README.txt doc
     [ -f ../README ] && mv ../README doc/README.txt
     mv share/doc/ejabberd/* doc
     rm -Rf lib var db sbin etc share)
}
