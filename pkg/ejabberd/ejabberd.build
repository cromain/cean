pkg_fetch() {
    import/git $pkg_name $pkg_url $* || return $import_error
    pkg_vsn=${$(_pkg_cd_sources && pkg_revision)#v}
}
pkg_init() { : }
pkg_config() {
    local -a conf
    [ -x /usr/local/bin/brew -a $pkg_cfg != ${pkg_cfg/sqlite/} ] && \
        pkg_cfg+=" --with-sqlite3=/usr/local/opt/sqlite"
    conf=("--prefix=$PWD/$(_pkg_dist)" $(echo $pkg_cfg))
    [ -x autogen.sh ] && {
        # new rebar version
        [ -x configure ] || ./autogen.sh
        ./configure $conf
    } || {
        # old configure version
        (cd src
         [ -x configure ] || autoreconf -vif
         ./configure $conf)
    }
}
pkg_make() {
    local cf="" lf=""
    [ -x /opt/local/bin/port ] && {
        cf="-I/opt/local/include"
        lf="-L/opt/local/lib"
    }
    [ -x /usr/local/bin/brew ] && {
        cf="-I/usr/local/include"
        lf="-L/usr/local/lib"
        local lib p
        for lib in openssl expat
        do
            p=$(brew info $lib | sed -e '/^\//!d;s/ .*//' | tail -n 1)
            cf+=" -I$p/include"
            lf+=" -L$p/lib"
        done
    }
    [ -x autogen.sh ] && {
        # rebar version
        export CFLAGS="$cf" CPPFLAGS="$cf" LDFLAGS="$lf"
        ./rebar get-deps
        make || return $make_error
    } || {
        # old configure version
        (cd src; CFLAGS="$cf" LDFLAGS="$lf" $MAKE) || return $make_error
    }
}
pkg_install() {
    local dist=$(_pkg_dist)
    [ -x autogen.sh ] && {
        # rebar version
        $MAKE install || return $install_error
    } || {
        # old configure version
        (cd src; $MAKE install) || return $install_error
        (cd src; $MAKE distclean)
    }
    (cd $dist
     mv ../src .
     [ -d lib ] && {    # handle new installation scheme
        mkdir ebin include priv
        for lib in lib/*
        do
          [ -d $lib/ebin ] && mv $lib/ebin/* ebin
          [ -d $lib/include ] && mv $lib/include/* include
          [ -d $lib/priv ] && (cd $lib/priv; tar -cf - . | tar -C ../../../priv -xf -)
        done
        rm priv/edoc.css priv/basho*
        rm -Rf lib
        mv ../lib src/elixir
     } || mv var/lib/ejabberd/* .
     mv sbin/* bin/* priv/bin
     mkdir -p priv/cfg priv/sql doc
     mv etc/ejabberd/* priv/cfg
     [ -d ../c_src ] && mv ../c_src .
     [ -d src/odbc ] && mv src/odbc/*sql priv/sql
     [ -d ../sql ] && mv ../sql/* priv/sql
     [ -f ../doc/README.txt ] && mv ../doc/README.txt doc
     [ -f ../README ] && mv ../README doc/README.txt
     mv share/doc/ejabberd/* doc
     rm -Rf bin sbin var etc share)
}
